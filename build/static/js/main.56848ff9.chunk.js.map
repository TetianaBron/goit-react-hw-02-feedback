{"version":3,"sources":["components/Profile/Profile.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendListItem.module.css","components/FriendList/FriendList.module.css","components/default.jpg","components/Profile/Profile.js","components/Statistics/Statistics.js","helpers/GenerateColor.js","components/FriendList/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Profile","name","avatar","tag","location","stats","followers","views","likes","className","s","profile","description","src","defaultImage","alt","item","label","quantity","Statistics","title","statistics","statList","map","id","percentage","style","backgroundColor","Math","random","toString","substr","StatusColor","styled","span","props","status","FriendListItem","isOnline","card","xmlns","viewBox","width","height","d","fill","defaultProps","FriendList","friends","friendList","TransactionHistory","items","transactionHistory","head","headItem","type","amount","currency","bodyItem","slice","toUpperCase","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,YAAc,6BAA6B,KAAO,sBAAsB,IAAM,qBAAqB,SAAW,0BAA0B,MAAQ,uBAAuB,KAAO,sBAAsB,SAAW,4B,gBCArSD,EAAOC,QAAU,CAAC,mBAAqB,+CAA+C,KAAO,iCAAiC,SAAW,qCAAqC,SAAW,uC,gBCAzLD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,MAAQ,0BAA0B,SAAW,6BAA6B,KAAO,2B,6PCA/ID,EAAOC,QAAU,CAAC,KAAO,6BAA6B,OAAS,+BAA+B,KAAO,+B,yRCArGD,EAAOC,QAAU,CAAC,KAAO,2B,muFCDV,MAA0B,oCCkD1BC,EA7CC,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,OAAQC,EAA2B,EAA3BA,IAAKC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MACtCC,EAA4BD,EAA5BC,UAAWC,EAAiBF,EAAjBE,MAAOC,EAAUH,EAAVG,MAC1B,OACE,sBAAgBC,UAAWC,IAAEC,QAA7B,UACE,sBAAKF,UAAWC,IAAEE,YAAlB,UACE,qBACEC,IAAKX,GAAUY,EACfC,IAAI,gHACJN,UAAWC,IAAER,SAEf,mBAAGO,UAAWC,IAAET,KAAhB,SAAuBA,IACvB,mBAAGQ,UAAWC,IAAEP,IAAhB,SAAsBA,IACtB,mBAAGM,UAAWC,IAAEN,SAAhB,SAA2BA,OAG7B,qBAAIK,UAAWC,IAAEL,MAAjB,UACE,qBAAII,UAAWC,IAAEM,KAAjB,UACE,sBAAMP,UAAWC,IAAEO,MAAnB,uBACA,sBAAMR,UAAWC,IAAEQ,SAAnB,SAA8BZ,OAEhC,qBAAIG,UAAWC,IAAEM,KAAjB,UACE,sBAAMP,UAAWC,IAAEO,MAAnB,mBACA,sBAAMR,UAAWC,IAAEQ,SAAnB,SAA8BX,OAEhC,qBAAIE,UAAWC,IAAEM,KAAjB,UACE,sBAAMP,UAAWC,IAAEO,MAAnB,mBACA,sBAAMR,UAAWC,IAAEQ,SAAnB,SAA8BV,YAvB1BP,I,gBCJC,SAASkB,EAAT,GAAuC,IAAjBC,EAAgB,EAAhBA,MAAOf,EAAS,EAATA,MAC1C,OACE,0BAASI,UAAWC,IAAEW,WAAtB,UACGD,GAAS,oBAAIX,UAAWC,IAAEU,MAAjB,SAAyBA,IAEnC,oBAAIX,UAAWC,IAAEY,SAAjB,SACGjB,EAAMkB,KAAI,gBAAGC,EAAH,EAAGA,GAAIP,EAAP,EAAOA,MAAOQ,EAAd,EAAcA,WAAd,OACT,qBAEEhB,UAAWC,IAAEM,KACbU,MAAO,CACLC,gBCdL,KAAO,SAA4B,SAAhBC,KAAKC,UAAqBC,SAAS,IAAIC,OAAO,EAAG,IDUnE,UAOE,sBAAMtB,UAAWC,IAAEO,MAAnB,SAA2BA,IAC3B,uBAAMR,UAAWC,IAAEe,WAAnB,UAAgCA,EAAhC,SAPKD,W,uKENjB,IAAMQ,EAAcC,IAAOC,KAAV,KAEP,SAAAC,GAAK,OAAKA,EAAMC,OAAS,QAAU,SAGvCC,EAAiB,SAAC,GAAgC,IAA9BnC,EAA6B,EAA7BA,OAAQD,EAAqB,EAArBA,KAAMqC,EAAe,EAAfA,SACtC,OACE,sBAAK7B,UAAWC,IAAE6B,KAAlB,UACE,cAACP,EAAD,CAAaI,OAAQE,EAArB,SACE,sBACEE,MAAM,6BACNC,QAAQ,YACRC,MAAM,OACNC,OAAO,OAJT,UAME,sBAAMC,EAAE,gBAAgBC,KAAK,SAC7B,sBAAMD,EAAE,6OAGZ,qBAAKnC,UAAWC,IAAER,OAAQW,IAAKX,EAAQa,IAAKd,EAAMyC,MAAM,OACxD,mBAAGjC,UAAWC,IAAET,KAAhB,SAAuBA,QAK7BoC,EAAeS,aAAe,CAC5B5C,OAAQY,GASKuB,QCjBAU,MApBf,YAAkC,IAAZC,EAAW,EAAXA,QACpB,OACE,oBAAIvC,UAAWC,IAAEuC,WAAjB,SACGD,EAAQzB,KAAI,gBAAGC,EAAH,EAAGA,GAAItB,EAAP,EAAOA,OAAQD,EAAf,EAAeA,KAAMqC,EAArB,EAAqBA,SAArB,OACX,oBAAa7B,UAAWC,IAAEM,KAA1B,SACE,cAAC,EAAD,CAAgBd,OAAQA,EAAQD,KAAMA,EAAMqC,SAAUA,KAD/Cd,S,wBCLF,SAAS0B,EAAT,GAAwC,IAAVC,EAAS,EAATA,MAC3C,OACE,wBAAO1C,UAAWC,IAAE0C,mBAApB,UACE,gCACE,qBAAI3C,UAAWC,IAAE2C,KAAjB,UACE,oBAAI5C,UAAWC,IAAE4C,SAAjB,kBACA,oBAAI7C,UAAWC,IAAE4C,SAAjB,oBACA,oBAAI7C,UAAWC,IAAE4C,SAAjB,2BAIJ,gCACGH,EAAM5B,KAAI,gBAAGC,EAAH,EAAGA,GAAI+B,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAQC,EAArB,EAAqBA,SAArB,OACT,+BACE,oBAAIhD,UAAWC,IAAEgD,SAAjB,SACGH,EAAKI,MAAM,EAAG,GAAGC,cAAgBL,EAAKI,MAAM,KAE/C,oBAAIlD,UAAWC,IAAEgD,SAAjB,SAA4BF,IAC5B,oBAAI/C,UAAWC,IAAEgD,SAAjB,SAA4BD,MALrBjC,W,YCJJ,SAASqC,IACtB,OACE,gCACE,cAAC,EAAD,CACE5D,KAAM6D,EAAK7D,KACXE,IAAK2D,EAAK3D,IACVC,SAAU0D,EAAK1D,SACfF,OAAQ4D,EAAK5D,OACbG,MAAOyD,EAAKzD,QAEd,cAACc,EAAD,CAAYC,MAAM,eAAef,MAAO0D,IACxC,cAAC5C,EAAD,CAAYd,MAAO0D,IACnB,cAAC,EAAD,CAAYf,QAASA,IACrB,cAACE,EAAD,CAAoBC,MAAOa,IAX7B,OCTJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACN,EAAD,MAEFO,SAASC,eAAe,W","file":"static/js/main.56848ff9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__Yz55Z\",\"avatar\":\"Profile_avatar__tHfB0\",\"description\":\"Profile_description__oEvlf\",\"name\":\"Profile_name__1knTR\",\"tag\":\"Profile_tag__3oIQ0\",\"location\":\"Profile_location__3_dKT\",\"stats\":\"Profile_stats__3cMQY\",\"item\":\"Profile_item__K0oSU\",\"quantity\":\"Profile_quantity__2A_sf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__1ENwI\",\"head\":\"TransactionHistory_head__q-LMS\",\"headItem\":\"TransactionHistory_headItem__3bE8P\",\"bodyItem\":\"TransactionHistory_bodyItem__2cHn1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__ojnSN\",\"title\":\"Statistics_title__2GjvT\",\"statList\":\"Statistics_statList__2_Ur4\",\"item\":\"Statistics_item__ak5M0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"FriendListItem_card__DR0xO\",\"avatar\":\"FriendListItem_avatar__89h6H\",\"name\":\"FriendListItem_name__3ml4R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendList_item__1OV4K\"};","export default __webpack_public_path__ + \"static/media/default.2e01288c.jpg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Profile.module.css';\nimport defaultImage from '../default.jpg';\n\nconst Profile = ({ name, avatar, tag, location, stats }) => {\n  const { followers, views, likes } = stats;\n  return (\n    <div key={name} className={s.profile}>\n      <div className={s.description}>\n        <img\n          src={avatar || defaultImage}\n          alt=\"Аватар пользователя\"\n          className={s.avatar}\n        />\n        <p className={s.name}>{name}</p>\n        <p className={s.tag}>{tag}</p>\n        <p className={s.location}>{location}</p>\n      </div>\n\n      <ul className={s.stats}>\n        <li className={s.item}>\n          <span className={s.label}>Followers</span>\n          <span className={s.quantity}>{followers}</span>\n        </li>\n        <li className={s.item}>\n          <span className={s.label}>Views</span>\n          <span className={s.quantity}>{views}</span>\n        </li>\n        <li className={s.item}>\n          <span className={s.label}>Likes</span>\n          <span className={s.quantity}>{likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  stats: PropTypes.shape({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }),\n};\n\nexport default Profile;\n","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\nimport generateColor from '../../helpers/GenerateColor';\n\nexport default function Statistics({ title, stats }) {\n  return (\n    <section className={s.statistics}>\n      {title && <h2 className={s.title}>{title}</h2>}\n\n      <ul className={s.statList}>\n        {stats.map(({ id, label, percentage }) => (\n          <li\n            key={id}\n            className={s.item}\n            style={{\n              backgroundColor: generateColor(),\n            }}\n          >\n            <span className={s.label}>{label}</span>\n            <span className={s.percentage}>{percentage}%</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ),\n};\n","export default function generateColor() {\n  return '#' + (0x1000000 + Math.random() * 0xffffff).toString(16).substr(1, 6);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport s from './FriendListItem.module.css';\nimport defaultImage from '../default.jpg';\n\nconst StatusColor = styled.span`\n  line-height: 50px;\n  fill: ${props => (props.status ? 'green' : 'red')};\n`;\n\nconst FriendListItem = ({ avatar, name, isOnline }) => {\n  return (\n    <div className={s.card}>\n      <StatusColor status={isOnline}>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 24 24\"\n          width=\"20px\"\n          height=\"20px\"\n        >\n          <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n          <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z\" />\n        </svg>\n      </StatusColor>\n      <img className={s.avatar} src={avatar} alt={name} width=\"48\" />\n      <p className={s.name}>{name}</p>\n    </div>\n  );\n};\n\nFriendListItem.defaultProps = {\n  avatar: defaultImage,\n};\n\nFriendListItem.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n};\n\nexport default FriendListItem;\n","import PropTypes from 'prop-types';\nimport s from './FriendList.module.css';\nimport FriendListItem from './FriendListItem';\n\nfunction FriendList({ friends }) {\n  return (\n    <ul className={s.friendList}>\n      {friends.map(({ id, avatar, name, isOnline }) => (\n        <li key={id} className={s.item}>\n          <FriendListItem avatar={avatar} name={name} isOnline={isOnline} />\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nexport default FriendList;\n","import PropTypes from 'prop-types';\nimport s from './TransactionHistory.module.css';\n\nexport default function TransactionHistory({ items }) {\n  return (\n    <table className={s.transactionHistory}>\n      <thead>\n        <tr className={s.head}>\n          <th className={s.headItem}>Type</th>\n          <th className={s.headItem}>Amount</th>\n          <th className={s.headItem}>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {items.map(({ id, type, amount, currency }) => (\n          <tr key={id}>\n            <td className={s.bodyItem}>\n              {type.slice(0, 1).toUpperCase() + type.slice(1)}\n            </td>\n            <td className={s.bodyItem}>{amount}</td>\n            <td className={s.bodyItem}>{currency}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }),\n  ),\n};\n","import user from './bd/user.json';\nimport Profile from './components/Profile/Profile';\n\nimport Statistics from './components/Statistics/Statistics';\nimport statisticalData from './bd/statistical-data.json';\n\nimport FriendList from './components/FriendList/FriendList';\nimport friends from './bd/friends.json';\n\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\nimport transactions from './bd/transactions.json';\n\nexport default function App() {\n  return (\n    <div>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <Statistics stats={statisticalData} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />;\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}